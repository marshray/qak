#=================================================================================================|
#
#   Copyright (c) 2011-2013, Marsh Ray
#
#   Permission to use, copy, modify, and/or distribute this software for any
#   purpose with or without fee is hereby granted, provided that the above
#   copyright notice and this permission notice appear in all copies.
#
#   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
#   OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
#=================================================================================================|

#	Command-line options.
unset -v NO_TEST
for arg in '--debug' "$@"
do
	if [[ "$arg" == "--debug" ]]; then
		BUILD_TYPE=debug
		CMAKE_BUILD_TYPE=Debug
	elif [[ "$arg" == "--release" ]]; then
		BUILD_TYPE=release
		CMAKE_BUILD_TYPE=Release
	elif [[ "$arg" == "--profile" ]]; then
		BUILD_TYPE=profile
		CMAKE_BUILD_TYPE=Release
	fi
done

#	Specify the compiler to use.
#
if [[ "clang" == $QAK_ccxx_toolchain ]]; then

    C_COMPILER=clang
    CXX_COMPILER=clang++

elif false; then

    # override
    GCC_VER=4.4.7
    C_COMPILER=gcc
    CXX_COMPILER=g++

elif false; then
    unset NULL
else
    unset NULL
    #GCC_VER=4.7.0
    #C_COMPILER=gcc-$GCC_VER
    #CXX_COMPILER=g++-$GCC_VER

    # This madness is required by Debian/Ubuntu's move to mutiarch
    #export LIBRARY_PATH=/usr/lib/x86_64-linux-gnu
    #export C_INCLUDE_PATH=/usr/include/x86_64-linux-gnu
    #export CPLUS_INCLUDE_PATH=/usr/include/x86_64-linux-gnu
fi

#	You can specify the qak/src directory in the environment variable QAK_SRC_DIR,
#	or this script will try to figure it out from its own location.

if [[ ! -d "$QAK_SRC_DIR" ]]; then
	QAK_SRC_DIR=$(dirname $(readlink -n -f "$0"))
fi
echo "QAK_SRC_DIR=$QAK_SRC_DIR"
if [[ ! -d "$QAK_SRC_DIR" ]]; then
	echo "ERROR Couldn't figure out the QAK_SRC_DIR"
fi
export QAK_SRC_DIR

#	You can specify the build root directory in the environment variable QAK_BUILD_ROOT_DIR,
#	or it uses a directory named 'build' as a sibling of $QAK_SRC_DIR

if [[ -z "$QAK_BUILD_ROOT_DIR" ]]; then
	QAK_BUILD_ROOT_DIR=$(readlink -f "$QAK_SRC_DIR/..")"/build"
	unset -v QAK_BUILD_DIR
fi

#	The build directory is named after the build type, under $QAK_BUILD_ROOT_DIR
QAK_BUILD_DIR="$QAK_BUILD_ROOT_DIR/$BUILD_TYPE"

echo "QAK_BUILD_ROOT_DIR=$QAK_BUILD_ROOT_DIR"
echo "QAK_BUILD_DIR=$QAK_BUILD_DIR"
