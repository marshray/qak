#!/bin/bash
#=================================================================================================|
#
#   Copyright (c) 2011-2013, Marsh Ray
#
#   Permission to use, copy, modify, and/or distribute this software for any
#   purpose with or without fee is hereby granted, provided that the above
#   copyright notice and this permission notice appear in all copies.
#
#   THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#   WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#   ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
#   OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
#=================================================================================================|

set -o errexit
#set -o xtrace

source $(dirname $(readlink -n -f "$0"))/zz-build-config "$@"

#	Command-line options.
unset -v NO_TEST
for arg in '--debug' "$@"
do
	if [[ "$arg" == "--debug" || "$arg" == "--release" || "$arg" == "--profile" ]]; then
		unset NULL; # handled already
	elif [[ "$arg" == "--no-test" ]]; then
		NO_TEST="--no-test"
	elif [[ "$arg" == "--help" ]]; then
		echo "Other valid command-line arguments are --debug, --release, --profile, and --no-test."
		exit 1
	else
		echo "Unrecognized command-line argument: $arg"
		exit 1
	fi
done

#
#	Validate env vars and set derived paths.
#

if [[ ! -d "$QAK_SRC_DIR" ]]; then echo "No usable QAK_SRC_DIR"; exit 1; fi

find "$QAK_SRC_DIR" -type f -name 'cmake_install.cmake' -exec rm \{\} \;
find "$QAK_SRC_DIR" -type f -name 'CMakeCache.txt' -exec rm \{\} \;
find "$QAK_SRC_DIR" -type d -name 'CMakeFiles' -exec rm -rf \{\} \;

#	Wipe and re-create the build dir.
if [[ -d "$QAK_BUILD_DIR" ]]; then
	set -o xtrace
	rm -rf "$QAK_BUILD_DIR"
	set +o xtrace
fi
set -o xtrace
mkdir -p "$QAK_BUILD_DIR"
set +o xtrace

BUILDIT_ERR=$QAK_BUILD_DIR/buildit-err.txt
BUILDIT_OUT_1=$QAK_BUILD_DIR/buildit-out.1.txt
BUILDIT_OUT_2=$QAK_BUILD_DIR/buildit-out.2.txt

if [[ "clang" == $QAK_ccxx_toolchain ]]; then

    source ./clean_cmake-clang

elif [[ "gcc" == $QAK_ccxx_toolchain ]]; then

    #	-std=c++0x is to use newer language features.
    #
    #	-Wno-invalid-offsetof is for libnrcgc, which takes one or two mild liberties with the
    #	layout of non-PODs.
    #
    #C_CXX_FLAGS="-ggdb3"

    C_CXX_FLAGS="$C_CXX_FLAGS -pthread -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT"   # -Wno-invalid-offsetof -Wno-deprecated
    C_CXX_FLAGS="$C_CXX_FLAGS -Wall"
    CXXFLAGS="-std=c++0x"

    if [[ "$BUILD_TYPE" == "debug" ]]; then

	    C_CXX_FLAGS="$C_CXX_FLAGS -O0 -fno-inline"

	    #	Enable GNU libstdc++ debugging
	    CXXFLAGS="$CXXFLAGS -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC"

    elif [[ "$BUILD_TYPE" == "release" ]]; then

	    C_CXX_FLAGS="$C_CXX_FLAGS"

    elif [[ "$BUILD_TYPE" == "profile" ]]; then

	    #C_CXX_FLAGS="$C_CXX_FLAGS -mtune=pentium -mfpmath=387 -mno-mmx -mno-sse -mno-sse2 -mno-sse3"
	    #C_CXX_FLAGS="$C_CXX_FLAGS -mtune=generic -mfpmath=387 -mno-mmx -mno-sse -mno-sse2 -mno-sse3"
	    C_CXX_FLAGS="$C_CXX_FLAGS -mtune=generic -mfpmath=387 -mno-sse2 -mno-sse3"
    fi

    export CFLAGS="$C_CXX_FLAGS $CFLAGS"
    export CXXFLAGS="$C_CXX_FLAGS $CXXFLAGS"
    export GLIBCXX_DEBUG_MESSAGE_LENGTH=120

else
    echo "need QAK_ccxx_toolchain defined"
    exit 1
fi

cd "$QAK_BUILD_DIR"

cmake -Wdev \
-DCMAKE_VERBOSE_MAKEFILE=true \
-DCMAKE_C_COMPILER=$C_COMPILER \
-DCMAKE_CXX_COMPILER=$CXX_COMPILER \
-DQAK_SRC_DIR="$QAK_SRC_DIR" \
-DCMAKE_BUILD_TYPE="$CMAKE_BUILD_TYPE" "$QAK_SRC_DIR"

#make

$QAK_SRC_DIR/build --$BUILD_TYPE $NO_TEST 2>&1 >$BUILDIT_OUT_1 || cp $BUILDIT_OUT_1 $BUILDIT_ERR

cp $BUILDIT_OUT_1 $BUILDIT_OUT_2

cat $BUILDIT_OUT_2
